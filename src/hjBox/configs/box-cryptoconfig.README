//
//
// box cryptoconfig
// Reference
//
// Configuration file for the encrypted movies that must
// be used in a Box

// Reference for configuration parameters
// <IPaddress:Port>     : "String"
//  sequence of <key-value pairs>: String:String pairs
// </IPaddress:Port>    : "/String"
//
// Extended descriptive reference in each entry of this config file
//
// <IPaddress:Port> : a certain box
// ciphersuite:definition // the ciphersuite def. of this encrypted movie
// key:hexadecimal-representation> // Key with valid keysize n
// iv: hexadecimal-representation  // iv, w/ the correct size
// integrity: integrity-control // Secure hash or HMAC definition
                                // for integrity check after decryption
// integrity-check: hexadecimal-rep-of-the-integrity-control-check
// mackey: hexadecimal-representation //Null if not required
// </IPaddress:Port> : end of configuration of this box


// EXAMPLES - See the box.cryptoconfig file


// Other possible ciphersuites for your tests and correct parameterizations

// ciphersuite: Blowfish/CBC/PKCS5Padding: can use w/ 64, 128, 256 or 448 bit keys
// ciphersuite: AES/GCM/NoPadding: can use w/ 128, 192 or 256 bit keys
// ciphersuite: DESede/CFB/NoPadding: can use w/ 112 or 168 bit keys
// ciphersuite: AES/OFB/NoPadding: can use w/ 128, 192 or 256 bit keys
// ciphersuite: RC4                  : ca use with any key size, ex 1024 bit keys
// ciphersuite: ChaCha20: 	     : cam use w/ a 256 bit key
// ciphersuite  DES/OFB/NoPadding    : can use w/ a 56 bit key .. Uhm Weak !
// ciphersuite  SALSA20    : can use w/ a 56 bit key .. Uhm Weak !
// etc ...

// For different Secure Hash Functions or HMAC key constructions can use also
// different parameterizations, ex:
// Try these Hash-ALgorithms you can test
// Some of them (can require Additional Crypto providers in you Java installation
// MD5    Uhm weak
// SHA1   Uhm probably weak ?
// SHA-224
// SHA-256
// SHA-512
// SHA-384
// SHA3-256
// KECCAK-384
// GOST
// RIPEMD256
// WHIRLPOOL
// BLAKE2B-384
// .... 
//
// HMAC key constructions you can test
// (as above, some can require additional cryptoproviders in your java installation
// HMacSHA1
// HMacSHA256
// HMacSHA224
// HMacSHA384
// HMacSHA512
// POLY1305CAST6
GOST3412MAC
HMAC-SHA3-512
SERPENT-GMAC
HMACRIPEMD256
HMACKECCAK512






